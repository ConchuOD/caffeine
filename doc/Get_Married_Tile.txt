title Handling GetMarriedTile

actor Actor

Actor->UI:From previous
UI->Game Logic:From previous
Game Logic->Get Married State:From previous
Get Married State->Get Married State:Update marital status of player\n[player.setMaritalStatus(MaritalStatus.Married)]
loop while all other players haven't gifted by spinning the wheel
Get Married State->Get Married State:Construct message requesting\na spin from the next player\n[SpinRequestMessage()]
Get Married State->Game Logic:Set response message requesting spin\n[setResponseMessage()]
Game Logic-->UI:Send RequestForSpin message
UI->UI: Enable spin the wheel
Actor->UI: Spin the wheel
UI->Game Logic:Send SpinRequest message\n[handleInput()]
Game Logic->Get Married State:Offload message input\n[currentState.handleInput()]
Get Married State->Get Married State:Spin wheel\n[spinTheWheel()]
Get Married State->Get Married State:Assign amount to pay based on even/odd result\n[subtractFromPlayersBalance(payerIndex),\naddToCurrentPlayerBalance()]
Get Married State->Get Married State:Advance gifting player focus\n[incrementPayerIndex()]
end
Get Married State->UI:Setting up for next move if applicable